name: C++ API test

on:
  push:
    branches: [ $default-branch ]
  pull_request:
    branches: [ $default-branch ]

jobs:
  build:
    name: ${ { matrix.config.name } }
    runs-on: ${ { matrix.config.os } }
    strategy:
      fail-fast: false
      matrix:
        config:
        # - {
        #     name: "Windows Latest MSVC", artifact: "Windows-MSVC.tar.xz",
        #     os: windows-latest,
        #     build_type: "Release", cc: "cl", cxx: "cl",
        #     environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
        #   }
        - {
            name: "Ubuntu Latest GCC", artifact: "Linux.tar.xz",
            os: ubuntu-latest,
            build_type: "Release", cc: "gcc", cxx: "g++"
          }
        # - {
        #     name: "macOS Latest Clang", artifact: "macOS.tar.xz",
        #     os: macos-latest,
        #     build_type: "Release", cc: "clang", cxx: "clang++"
        #   }

    steps:
    - uses: actions/checkout@v3

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.config.build_type}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.config.build_type}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{matrix.config.build_type}}

