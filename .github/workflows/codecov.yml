name: codecov upload
# only run on merge into main branch
on: 
  - push
  - pull_request



env:
  CPP_FLAGS: --coverage -fno-inline -fno-inline-small-functions -fno-default-inline -O0 --std=c++20
  INCLUDE_FLAGS: -I ${{github.workspace}}/src/quspin_core/includes -I ${{github.workspace}}/test_cpp

jobs:
  run-cpp:
    name: C++ code-coverage 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download doctest
        run: wget https://github.com/doctest/doctest/releases/download/v2.4.9/doctest.h -O ${{github.workspace}}/test_cpp/doctest.h

      - name: Compile calculator
        working-directory: ${{github.workspace}}/test_cpp
        run: g++ $CPP_FLAGS $INCLUDE_FLAGS -o test test.cpp

      - name: Run tests
        working-directory: ${{github.workspace}}/test_cpp
        run: ./test
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3          
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          gcov: true
          gcov_include: test.cpp

  run-python:
    name: Python code-coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get boost headers
        run: |
          curl -L -O https://github.com/scipy/boost-headers-only/archive/refs/heads/main.zip
          7z x main.zip

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: checking pip 
        run:  python -m ensurepip --upgrade

      - name: Install
        run: |
          pip install -v coverage Cython cython-coverage numpy
          ENABLE_COVERAGE=True python setup.py develop

      - name: Test
        working-directory: ${{github.workspace}}
        run: |
          coverage run -m unittest discover
          coverage xml
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3          
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
