name: Build and Publish

on:
  pull_request:
  push:
    branches:
      - main
  release:
    types:
      - published

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}


jobs:
  ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: chartboost/ruff-action@v1
  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: psf/black@stable
  clang-format-checking:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: RafikFarhad/clang-format-github-action@v3
        with:
          sources: "libquspin/include/**/*.hpp,libquspin/src/**/*.cpp"


  coverage:
    needs: [ruff, black, clang-format-checking]
    name: Python code-coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: checking pip
        run:  python -m ensurepip --upgrade

      - name: Install
        run: |
          pip install coverage pytest
          pip install . -v
        env:
          COVERAGE: 1

      - name: Test
        working-directory: ${{github.workspace}}
        run: |
          coverage run -m pytest -x
          coverage xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          plugins: gcov, pycoverage

  build_wheels:
    needs: coverage
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      - name: Prepare MSVC
        if: matrix.os == 'windows-latest'
        uses: bus1/cabuild/action/msdevshell@v1
        with:
          architecture: x64
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.19.0
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  build_sdist:
    needs: coverage
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload_all:
    needs: [build_wheels, build_sdist]
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
    - uses: actions/download-artifact@v4
      with:
        pattern: cibw-*
        path: dist
        merge-multiple: true

    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true
