name: Cython API CI

on:
  - push
  - pull_request


jobs:
  pre_job:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          # All of these options are optional, so you can remove them if you are happy with the defaults
          concurrent_skipping: 'never'
          skip_after_successful_duplicate: 'true'
          paths_ignore: '["**/README.md", "**/docs/**","**/conda.recipe/**","**/test_cpp/**"]'
          do_not_skip: '["workflow_dispatch", "schedule"]'

  test:
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    name: Cython CI - ${{matrix.config.os}} python ${{matrix.config.py_version}}
    runs-on: ${{matrix.config.os}}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {os: macos-latest, py_version: '3.10'}
        # - {os: macos-latest, py_version: '3.9'}
        # - {os: macos-latest, py_version: '3.8'}
        - {os: ubuntu-latest, py_version: '3.10'}
        # - {os: ubuntu-latest, py_version: '3.9'}
        # - {os: ubuntu-latest, py_version: '3.8'}
        - {os: windows-latest, py_version: '3.10'}
        # - {os: windows-latest, py_version: '3.9'}
        # - {os: windows-latest, py_version: '3.8'}

    steps:
    - name: Checkout QuSpin-Core
      uses: actions/checkout@v3

    - name: Get boost headers
      run: |
        wget https://github.com/scipy/boost-headers-only/archive/refs/heads/main.zip -O ${{github.workspace}}/main.zip
        7z x main.zip

    - uses: actions/setup-python@v4
      with:
        python-version: ${{matrix.config.py_version}} 
    
    - name: checking pip 
      run:  python -m ensurepip --upgrade

    - name: Install
      run: pip install ${{github.workspace}}

    - name: Test
      working-directory: ${{github.workspace}}/test/test_python
      run: python -m unittest 
